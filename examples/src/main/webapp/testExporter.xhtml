<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html  xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:ma="http://myfaces.apache.org/actions"
    xmlns:fn="http://java.sun.com/jsp/jstl/functions">
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<head>
</head>
<body>
<ui:composition template="/META-INF/templates/example.xhtml">
  <f:metadata>
      <f:viewParam name="savedValue" value="#{sayHelloViewScope.savedValue}" 
                   required="false"/>
  </f:metadata>
  <ui:define name="header">
      <h1><h:outputText value="#{msgs['title']}"/></h1>
  </ui:define>
  <ui:define name="content">
  
    <p>This example shows how to define a link that when is clicked, it
    generates a simple excel file taking some parameters.</p>
      
    <p>The idea is define a "virtual" view called "/exporter.xhtml" . The view
    has an empty content, and it is declared inside the managed bean and 
    scanned by CDI algorithm, but the user should not have to create it in the
    webapp folder, that's why it is "virtual".</p>
      
    <p>Please note the generated link has a client window id, so beans relying
    on the client window like the ones related to @FlowScoped will work well.</p>

    <h:link outcome="exporter" value="Export to excel" target="_blank">
        <f:param name="action" value="exportExcel"/>
        <f:param name="id" value="#{5}"/>
    </h:link> 

  </ui:define>
</ui:composition>
</body>
</html>